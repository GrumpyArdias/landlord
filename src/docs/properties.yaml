openapi: 3.0.0

paths:
  /properties:
    get:
      summary: Return an array of properties for one user
      tags:
        - Properties
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Properties"
        "401":
          description: Unauthorized
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
        "500":
          description: Internal error
    post:
      summary: Create a new property and returns it
      tags:
        - Properties
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/New_Property"
      responses:
        "200":
          description: Successful request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Property"
        "400":
          description: Bad request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal error
  /properties/{id}:
    get:
      summary: Returns the property with the specified id, if's exist
      tags:
        - Properties
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Property identifier
          example: 5
      responses:
        "200":
          description: Successful request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Property"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal error
    put:
      summary: Update the specified property and returns it
      tags:
        - Properties
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Property identifier
          example: 5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Update_Property"
      responses:
        "200":
          description: Successful request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Property"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal error
    delete:
      summary: Delete the specified property and returns it
      tags:
        - Properties
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Property identifier
          example: 5
      responses:
        "200":
          description: Successful request
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Property"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal error

components:
  schemas:
    Properties:
      type: object
      properties:
        status:
          type: number
          example: 200
        payload:
          type: array
          items:
            $ref: "#components/schemas/Property"
    Property:
      type: object
      properties:
        status:
          type: number
          example: 200
        payload:
          type: object
          properties:
            id:
              type: number
              example: 1
            address:
              type: string
              example: Calle 123, N12
            city:
              type: string
              example: Madrid
            postalCode:
              type: string
              example: 28001
            ownerId:
              type: number
              example: 1
    New_Property:
      type: object
      required: [address, postalcode, city]
      properties:
        id:
          type: number
          example: 1
        address:
          type: string
          example: Calle 123, N12
        postalcode:
          type: string
          example: 28001
        city:
          type: string
          example: Madrid
        ownerId:
          type: number
          example: 1
    Update_Property:
      type: object
      properties:
        address:
          type: string
          example: Calle 123, N12
        city:
          type: string
          example: Madrid
        postalcode:
          type: string
          example: 28001
    Error:
      type: object
      properties:
        status:
          type: number
          example: 401
        message:
          type: string
          example: Unauthorized to get access to this endpoint
